# 开发环境配置
server:
  port: 8083

spring:
  datasource:
    # 数据库连接URL及参数优化
    url: jdbc:mysql://localhost:3306/coder?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:WTT713}
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource

    # Hikari连接池详细配置
    hikari:
      # 连接池名称
      pool-name: CoderUserHikariCP
      # 核心连接池配置
      maximum-pool-size: 15                    # 最大连接数
      minimum-idle: 5                          # 最小空闲连接数
      # 连接超时配置
      connection-timeout: 30000                # 连接超时时间(ms) 30秒

  # Redis配置
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 5000ms
    jedis:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: 3000ms

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  servlet:
    multipart:
      # 启用multipart上传
      enabled: true
      # 单个文件最大大小 100MB
      max-file-size: 100MB
      # 单次请求最大大小 500MB
      max-request-size: 500MB
      # 文件写入磁盘的阈值
      file-size-threshold: 2KB
      # 临时文件位置 - 使用项目目录下的temp文件夹
      location: D:\\Coder\\coder-server\\temp

# 文件服务配置
file:
  # 文件上传配置
  upload:
    # 文件上传根路径
    base-path: ${FILE_UPLOAD_PATH:./uploads/}
    # 临时文件路径
    temp-path: ${FILE_TEMP_PATH:./temp/}
    # 单个文件最大大小（字节）100MB
    max-file-size: ${FILE_MAX_SIZE:104857600}
    # 单次请求最大大小（字节）500MB
    max-request-size: ${FILE_MAX_REQUEST_SIZE:524288000}
    # 允许上传的文件类型
    allowed-types: jpg,jpeg,png,gif,bmp,webp,pdf,doc,docx,xls,xlsx,ppt,pptx,txt,md,log,zip,rar
    # 禁止上传的文件类型
    forbidden-types: exe,bat,sh,jsp,php,asp
    # 是否启用文件类型检查
    enable-type-check: true
    # 是否启用文件内容检查
    enable-content-check: false

  # 文件访问配置
  access:
    # 文件访问域名
    domain: ${FILE_ACCESS_DOMAIN:http://localhost:8083}
    # 文件访问路径前缀
    path-prefix: /files
    # 静态资源映射路径
    static-path: /static/**
    # 是否启用访问权限验证
    enable-auth: false
    # 匿名访问允许的文件类型
    anonymous-types: jpg,jpeg,png,gif,bmp,webp

  # 存储配置
  storage:
    # 默认存储类型：LOCAL, OSS, COS, QINIU
    default-type: ${FILE_STORAGE_TYPE:LOCAL}

    # 本地存储配置
    local:
      # 存储根路径
      root-path: ${FILE_LOCAL_PATH:./files/}
      # URL访问前缀
      url-prefix: /files

# MyBatis增强配置
mybatis:
  # 映射文件位置
  mapper-locations: classpath:mapper/*.xml
  # 类型别名包
  type-aliases-package: com.coder.entity
  # 核心配置
  configuration:
    # 下划线转驼峰
    map-underscore-to-camel-case: true
    # 开发环境日志输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


# 日志配置
logging:
  level:
    root: info
    com.coder: debug
    org.springframework: info
    org.springframework.web: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}:%line] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{36}:%line] - %msg%n"
  file:
    name: ./logs/coder-user.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 1GB

# PageHelper分页插件配置
pagehelper:
  # 数据库
  helper-dialect: mysql
  # 默认值为false，设置为true时，pageNum<=0时会查询第一页，pageNum>pages（超过总数时），会查询最后一页
  reasonable: true
  # 支持通过Mapper接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面params配置的字段中取值，查找到合适的值时就会自动分页
  support-methods-arguments: true
  # 为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值
  params: count=countSql
  # 自动识别数据库类型
  auto-dialect: true