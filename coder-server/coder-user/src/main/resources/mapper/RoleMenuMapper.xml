<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coder.mapper.RoleMenuMapper">

    <!-- 角色菜单结果映射 -->
    <resultMap type="RoleMenu" id="RoleMenuResult">
        <id property="id" column="id"/>
        <result property="roleId" column="role_id"/>
        <result property="menuId" column="menu_id"/>
        <result property="createTime" column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="deleted" column="deleted"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 角色菜单VO结果映射 -->
    <resultMap type="com.coder.vo.RoleMenuVO" id="RoleMenuVOResult">
        <id property="id" column="id"/>
        <result property="roleId" column="role_id"/>
        <result property="roleCode" column="role_code"/>
        <result property="roleName" column="role_name"/>
        <result property="menuId" column="menu_id"/>
        <result property="menuName" column="menu_name"/>
        <result property="menuType" column="menu_type"/>
        <result property="menuTypeDesc" column="menu_type_desc"/>
        <result property="permission" column="permission"/>
        <result property="createTime" column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 基础字段映射 -->
    <sql id="Base_Column_List">
        id, role_id, menu_id, create_time, update_time, create_by, update_by, deleted, remark
    </sql>

    <!-- 查询条件 -->
    <sql id="Where_Clause">
        <where>
            rm.deleted = 0
            <if test="roleId != null">
                AND rm.role_id = #{roleId}
            </if>
            <if test="menuId != null">
                AND rm.menu_id = #{menuId}
            </if>
        </where>
    </sql>

    <!-- 插入角色菜单关联 -->
    <insert id="insert" parameterType="RoleMenu" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_role_menu (
            role_id, menu_id, create_time, update_time, create_by, update_by, deleted, remark
        ) VALUES (
                     #{roleId}, #{menuId}, #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{deleted}, #{remark}
                 )
    </insert>

    <!-- 批量插入角色菜单关联 -->
    <insert id="insertBatch">
        INSERT INTO sys_role_menu (
        role_id, menu_id, create_time, update_time, create_by, update_by, deleted, remark
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.roleId}, #{item.menuId}, #{item.createTime}, #{item.updateTime},
            #{item.createBy}, #{item.updateBy}, #{item.deleted}, #{item.remark})
        </foreach>
    </insert>

    <!-- 逻辑删除角色菜单关联 -->
    <update id="deleteById">
        UPDATE sys_role_menu
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 根据角色ID删除菜单关联 -->
    <update id="deleteByRoleId">
        UPDATE sys_role_menu
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE role_id = #{roleId} AND deleted = 0
    </update>

    <!-- 根据菜单ID删除角色关联 -->
    <update id="deleteByMenuId">
        UPDATE sys_role_menu
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE menu_id = #{menuId} AND deleted = 0
    </update>

    <!-- 根据ID查询角色菜单关联 -->
    <select id="selectById" resultMap="RoleMenuResult">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_role_menu
        WHERE id = #{id} AND deleted = 0
    </select>

    <!-- 查询角色菜单关联 -->
    <select id="selectByRoleIdAndMenuId" resultMap="RoleMenuResult">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_role_menu
        WHERE role_id = #{roleId} AND menu_id = #{menuId} AND deleted = 0
    </select>

    <!-- 分页查询角色菜单关联列表 -->
    <select id="selectPageList" resultMap="RoleMenuVOResult">
        SELECT rm.id, rm.role_id, r.role_code, r.role_name,
        rm.menu_id, m.menu_name, m.menu_type,
        CASE m.menu_type
        WHEN 1 THEN '目录'
        WHEN 2 THEN '菜单'
        WHEN 3 THEN '按钮'
        ELSE '未知'
        END AS menu_type_desc,
        m.permission, rm.create_time, rm.remark
        FROM sys_role_menu rm
        INNER JOIN sys_role r ON rm.role_id = r.id
        INNER JOIN sys_menu m ON rm.menu_id = m.id
        <include refid="Where_Clause"/>
        AND r.deleted = 0 AND m.deleted = 0
        ORDER BY rm.create_time DESC
    </select>

    <!-- 查询角色菜单关联总数 -->
    <select id="selectCount" resultType="Long">
        SELECT COUNT(1)
        FROM sys_role_menu rm
        INNER JOIN sys_role r ON rm.role_id = r.id
        INNER JOIN sys_menu m ON rm.menu_id = m.id
        <include refid="Where_Clause"/>
        AND r.deleted = 0 AND m.deleted = 0
    </select>

    <!-- 根据角色ID查询菜单ID列表 -->
    <select id="selectMenuIdsByRoleId" resultType="Long">
        SELECT menu_id
        FROM sys_role_menu
        WHERE role_id = #{roleId} AND deleted = 0
    </select>

    <!-- 根据菜单ID查询角色ID列表 -->
    <select id="selectRoleIdsByMenuId" resultType="Long">
        SELECT role_id
        FROM sys_role_menu
        WHERE menu_id = #{menuId} AND deleted = 0
    </select>

    <!-- 检查角色是否拥有菜单 -->
    <select id="existsByRoleIdAndMenuId" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM sys_role_menu
        WHERE role_id = #{roleId} AND menu_id = #{menuId} AND deleted = 0
    </select>

</mapper>