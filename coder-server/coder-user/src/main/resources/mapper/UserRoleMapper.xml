<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coder.mapper.UserRoleMapper">

    <!-- 用户角色结果映射 -->
    <resultMap type="com.coder.entity.UserRole" id="UserRoleResult">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
        <result property="createTime" column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="deleted" column="deleted"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 用户角色VO结果映射 -->
    <resultMap type="com.coder.vo.UserRoleVO" id="UserRoleVOResult">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="roleId" column="role_id"/>
        <result property="roleCode" column="role_code"/>
        <result property="roleName" column="role_name"/>
        <result property="roleDesc" column="role_desc"/>
        <result property="createTime" column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 基础字段映射 -->
    <sql id="Base_Column_List">
        id, user_id, role_id, create_time, update_time, create_by, update_by, deleted, remark
    </sql>

    <!-- 查询条件 -->
    <sql id="Where_Clause">
        <where>
            ur.deleted = 0
            <if test="userId != null">
                AND ur.user_id = #{userId}
            </if>
            <if test="roleId != null">
                AND ur.role_id = #{roleId}
            </if>
        </where>
    </sql>

    <!-- 插入用户角色关联 -->
    <insert id="insert" parameterType="com.coder.entity.UserRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user_role (
            user_id, role_id, create_time, update_time, create_by, update_by, deleted, remark
        ) VALUES (
                     #{userId}, #{roleId}, #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{deleted}, #{remark}
                 )
    </insert>

    <!-- 批量插入用户角色关联 -->
    <insert id="insertBatch">
        INSERT INTO sys_user_role (
        user_id, role_id, create_time, update_time, create_by, update_by, deleted, remark
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.userId}, #{item.roleId}, #{item.createTime}, #{item.updateTime},
            #{item.createBy}, #{item.updateBy}, #{item.deleted}, #{item.remark})
        </foreach>
    </insert>

    <!-- 逻辑删除用户角色关联 -->
    <update id="deleteById">
        UPDATE sys_user_role
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 根据用户ID删除角色关联 -->
    <update id="deleteByUserId">
        UPDATE sys_user_role
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE user_id = #{userId} AND deleted = 0
    </update>

    <!-- 根据角色ID删除用户关联 -->
    <update id="deleteByRoleId">
        UPDATE sys_user_role
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE role_id = #{roleId} AND deleted = 0
    </update>

    <!-- 根据ID查询用户角色关联 -->
    <select id="selectById" resultMap="UserRoleResult">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user_role
        WHERE id = #{id} AND deleted = 0
    </select>

    <!-- 查询用户角色关联 -->
    <select id="selectByUserIdAndRoleId" resultMap="UserRoleResult">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user_role
        WHERE user_id = #{userId} AND role_id = #{roleId} AND deleted = 0
    </select>

    <!-- 分页查询用户角色关联列表 -->
    <select id="selectPageList" resultMap="UserRoleVOResult">
        SELECT ur.id, ur.user_id, u.username, u.nickname,
        ur.role_id, r.role_code, r.role_name, r.role_desc,
        ur.create_time, ur.remark
        FROM sys_user_role ur
        INNER JOIN sys_user u ON ur.user_id = u.id
        INNER JOIN sys_role r ON ur.role_id = r.id
        <include refid="Where_Clause"/>
        AND u.deleted = 0 AND r.deleted = 0
        ORDER BY ur.create_time DESC
    </select>

    <!-- 查询用户角色关联总数 -->
    <select id="selectCount" resultType="Long">
        SELECT COUNT(1)
        FROM sys_user_role ur
        INNER JOIN sys_user u ON ur.user_id = u.id
        INNER JOIN sys_role r ON ur.role_id = r.id
        <include refid="Where_Clause"/>
        AND u.deleted = 0 AND r.deleted = 0
    </select>

    <!-- 根据用户ID查询角色ID列表 -->
    <select id="selectRoleIdsByUserId" resultType="Long">
        SELECT role_id
        FROM sys_user_role
        WHERE user_id = #{userId} AND deleted = 0
    </select>

    <!-- 根据角色ID查询用户ID列表 -->
    <select id="selectUserIdsByRoleId" resultType="Long">
        SELECT user_id
        FROM sys_user_role
        WHERE role_id = #{roleId} AND deleted = 0
    </select>

    <!-- 检查用户是否拥有角色 -->
    <select id="existsByUserIdAndRoleId" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM sys_user_role
        WHERE user_id = #{userId} AND role_id = #{roleId} AND deleted = 0
    </select>

</mapper>