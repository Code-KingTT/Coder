<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coder.mapper.UserMapper">

    <!-- 用户结果映射 -->
    <resultMap type="User" id="UserResult">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="nickname" column="nickname"/>
        <result property="realName" column="real_name"/>
        <result property="mobile" column="mobile"/>
        <result property="email" column="email"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="district" column="district"/>
        <result property="address" column="address"/>
        <result property="avatar" column="avatar"/>
        <result property="gender" column="gender"/>
        <result property="birthday" column="birthday" javaType="java.time.LocalDate" jdbcType="DATE"/>
        <result property="profile" column="profile"/>
        <result property="status" column="status"/>
        <result property="lastLoginTime" column="last_login_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="lastLoginIp" column="last_login_ip"/>
        <result property="loginCount" column="login_count"/>
        <result property="failedLoginCount" column="failed_login_count"/>
        <result property="lockedTime" column="locked_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="passwordUpdateTime" column="password_update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="twoFactorEnabled" column="two_factor_enabled"/>
        <result property="twoFactorSecret" column="two_factor_secret"/>
        <result property="tags" column="tags"/>
        <result property="source" column="source"/>
        <result property="thirdPartyId" column="third_party_id"/>
        <result property="thirdPartyType" column="third_party_type"/>
        <result property="createTime" column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
        <result property="deleted" column="deleted"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <!-- 基础字段映射 -->
    <sql id="Base_Column_List">
        id, username, password, salt, nickname, real_name, mobile, email,
        province, city, district, address, avatar, gender, birthday, profile,
        status, last_login_time, last_login_ip, login_count, failed_login_count,
        locked_time, password_update_time, two_factor_enabled, two_factor_secret,
        tags, source, third_party_id, third_party_type,
        create_time, update_time, create_by, update_by, deleted, remark
    </sql>

    <!-- 查询字段映射（排除敏感字段） -->
    <sql id="Select_Column_List">
        id, username, nickname, real_name, mobile, email,
        province, city, district, address, avatar, gender, birthday, profile,
        status, last_login_time, last_login_ip, login_count,
        tags, source, third_party_id, third_party_type,
        create_time, update_time, create_by, update_by, deleted, remark
    </sql>

    <!-- 查询条件 -->
    <sql id="Where_Clause">
        <where>
            deleted = 0
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="nickname != null and nickname != ''">
                AND nickname LIKE CONCAT('%', #{nickname}, '%')
            </if>
            <if test="realName != null and realName != ''">
                AND real_name LIKE CONCAT('%', #{realName}, '%')
            </if>
            <if test="mobile != null and mobile != ''">
                AND mobile = #{mobile}
            </if>
            <if test="email != null and email != ''">
                AND email = #{email}
            </if>
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </sql>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user (
            username, password, salt, nickname, real_name, mobile, email,
            province, city, district, address, avatar, gender, birthday, profile,
            status, last_login_time, last_login_ip, login_count, failed_login_count,
            locked_time, password_update_time, two_factor_enabled, two_factor_secret,
            tags, source, third_party_id, third_party_type,
            create_time, update_time, create_by, update_by, deleted, remark
        ) VALUES (
                     #{username}, #{password}, #{salt}, #{nickname}, #{realName}, #{mobile}, #{email},
                     #{province}, #{city}, #{district}, #{address}, #{avatar}, #{gender}, #{birthday}, #{profile},
                     #{status}, #{lastLoginTime}, #{lastLoginIp}, #{loginCount}, #{failedLoginCount},
                     #{lockedTime}, #{passwordUpdateTime}, #{twoFactorEnabled}, #{twoFactorSecret},
                     #{tags}, #{source}, #{thirdPartyId}, #{thirdPartyType},
                     #{createTime}, #{updateTime}, #{createBy}, #{updateBy}, #{deleted}, #{remark}
                 )
    </insert>

    <!-- 逻辑删除用户 -->
    <update id="deleteById">
        UPDATE sys_user
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新用户 -->
    <update id="updateById" parameterType="User">
        UPDATE sys_user
        <set>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="email != null">email = #{email},</if>
            <if test="province != null">province = #{province},</if>
            <if test="city != null">city = #{city},</if>
            <if test="district != null">district = #{district},</if>
            <if test="address != null">address = #{address},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="profile != null">profile = #{profile},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = #{updateTime},
            update_by = #{updateBy}
        </set>
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="UserResult">
        SELECT <include refid="Select_Column_List"/>
        FROM sys_user
        WHERE id = #{id} AND deleted = 0
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="UserResult">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_user
        WHERE username = #{username} AND deleted = 0
    </select>

    <!-- 分页查询用户列表 -->
    <select id="selectPageList" resultMap="UserResult">
        SELECT <include refid="Select_Column_List"/>
        FROM sys_user
        <include refid="Where_Clause"/>
        ORDER BY create_time DESC
    </select>

    <!-- 查询用户总数 -->
    <select id="selectCount" resultType="Long">
        SELECT COUNT(1)
        FROM sys_user
        <include refid="Where_Clause"/>
    </select>

    <!-- 批量逻辑删除用户 -->
    <update id="deleteBatchByIds">
        UPDATE sys_user
        SET deleted = 1, update_time = NOW(), update_by = #{updateBy}
        WHERE deleted = 0 AND id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>